# GeoPoint

Parse 让您可以把真实的纬度和经度坐标与对象关联起来。通过在 `%{ParseObject}` 中添加 `PFGeoPoint`，可以在查询时实现将对象与参考点的距离临近性纳入考虑。这可以让您轻松某些事情，如找出距离与某个用户最近的其他用户或者距离某个用户最近的地标。

<div class='tip info'><div>
查看我们的 [Anywall 教程](/tutorials/anywall)，了解如何在真实应用程序中使用 `PFGeoPoints` 和 `%{ParseUser}`。您可以了解到从实施基本用户管理工作流程到通过核心位置追踪 GPS 位置等各方面信息。
</div></div>

## PFGeoPoint

要将某个地点与对象联系起来，您首先要创建一个 `PFGeoPoint`。例如，要创建一个纬度为 40.0 度，经度为 -30.0 的点：

```objc
PFGeoPoint *point = [PFGeoPoint geoPointWithLatitude:40.0 longitude:-30.0];
```

然后，该点被作为常规字段储存在对象中。

```objc
placeObject[@"location"] = point;
```

注意：目前，一个类中只有一个键可能是 `PFGeoPoint`。

### 获取用户当前位置

`PFGeoPoint` 也提供了用于提取用户当前位置的辅助方法。这可以通过 `geoPointForCurrentLocationInBackground` 实现：

```objc
[PFGeoPoint geoPointForCurrentLocationInBackground:^(PFGeoPoint *geoPoint, NSError *error) {
    if (!error) {
        // do something with the new geoPoint
    }
}];
```

该代码运行时，会出现以下情况：

1.  内部 `CLLocationManager` 开始监听位置更新（通过 `startsUpdatingLocation`）。
2.  收到位置后，位置管理器将停止监听位置更新（通过 `stopsUpdatingLocation`），并且将根据新位置创建 `PFGeoPoint`。位置管理器出错时也会停止监听更新，并且返回 `NSError`。
3.  您的 `block` 被 `PFGeoPoint` 调用。

对于直接选择使用 `CLLocationManager` 的用户，我们还提供 `+geoPointWithLocation:` 构造函数，用于将 `CLLocation` 直接转换成 `PFGeoPoint` － 这点对于需要不断轮询的应用程序而言非常有用。

## Geo 查询

有了一些具有空间坐标的对象后，找到哪些对象距离某个点最近将会产生很好的效应。这可以通过使用 `whereKey:nearGeoPoint:` 对 `PFQuery` 添加另一限制条件完成。举例而言，找出距离某个用户最近的十个地点的方法如下：

```objc
// User's location
PFGeoPoint *userGeoPoint = userObject[@"location"];
// Create a query for places
PFQuery *query = [PFQuery queryWithClassName:@"PlaceObject"];
// Interested in locations near user.
[query whereKey:@"location" nearGeoPoint:userGeoPoint];
// Limit what could be a lot of points.
query.limit = 10;
// Final list of objects
placesObjects = [query findObjects];
```

此时，`placesObjects` 是按照与 `userGeoPoint` 的距离（由近及远）排列的一组对象。注意，若应用另一个 `orderByAscending:`/`orderByDescending:` 限制条件，该限制条件将优先于距离顺序。

若要用距离来限定获得哪些结果，请使用 `whereKey:nearGeoPoint:withinMiles`、`whereKey:nearGeoPoint:withinKilometers` 和 `whereKey:nearGeoPoint:withinRadians`。

您还可以查询包含在特定区域内的对象集合。若要查找位于某个矩形区域内的对象，请将 `whereKey:withinGeoBoxFromSouthwest:toNortheast:` 限制条件添加至您的 `PFQuery`。

```objc
PFGeoPoint *swOfSF = [PFGeoPoint geoPointWithLatitude:37.708813 longitude:-122.526398];
PFGeoPoint *neOfSF = [PFGeoPoint geoPointWithLatitude:37.822802 longitude:-122.373962];
PFQuery *query = [PFQuery queryWithClassName:@"PizzaPlaceObject"];
[query whereKey:@"location" withinGeoBoxFromSouthwest:swOfSF toNortheast:neOfSF];
NSArray *pizzaPlacesInSF = [query findObjects];
```

## 注意事项

目前需要注意以下几点：

1.  每个 PFObject 类可能仅有一个带 PFGeoPoint 对象的键。
2.  点不应等于或大于最大范围值。纬度不能为 -90.0 或 90.0。经度不能为 -180.0 或 180.0。若纬度或经度设置超出边界，会引起错误。
