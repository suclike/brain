# 앱 내 구매

Parse에는 앱 내 구매에 사용하는 일련의 API가 있습니다. Parse에서는 `StoreKit` 작업을 더 쉽게 만들어주고, 다운로드 가능한 콘텐츠를 제공하고 클라우드에서 영수증 확인을 용이하게 합니다. 영수증 확인은 적절한 값을 지불한 사용자에게만 다운로드를 허용하는 기능입니다.

개발자들은 그 외에도 제품에 쿼리 가능한 메타데이터를 추가하여 구매 가능한 제품을 분류, 검색하고 동적으로 조작할 수 있습니다.

마지막으로, Parse로 업로드된 콘텐츠는 Apple 검토 프로세스가 면제되므로 업로드가 완료되는 즉시 제공할 수 있습니다.

## Apple 설정

Parse에서 앱 내 구매를 사용하려면 먼저 Apple에서 앱과 제품을 설정해야 합니다. 이 프로세스는 프로비저닝 포털과 iTunes Connect 모두에 적용됩니다. 이 [단계별 가이드](https://developer.apple.com/library/ios/#technotes/tn2259/_index.html)를 권장합니다.

설정 과정이 까다로울 수 있으므로 Apple 문서의 내용을 정확하게 따라야 합니다.

## 간편 구매

위와 같이 설정을 완료하면 바로 앱 내 구매 작업을 시작할 수 있습니다.

주요 스레드에서 제품의 핸들러를 등록합니다.

```objc
// Use the product identifier from iTunes to register a handler.
[PFPurchase addObserverForProduct:@"Pro" block:^(SKPaymentTransaction *transaction) {
    // Write business logic that should run once this product is purchased.
    isPro = YES;
}];
```

이것으로 구매가 이루어지지 않지만 나중에 구매하는 경우 실행할 블록을 등록하면 됩니다. 이러한 등록은 주요 스레드에서 수행해야 하며 앱을 실행한 직후에 `application:didFinishLaunchingWithOptions:`에서 수행하는 것이 좋습니다. 여러 제품이 있는 경우에는 `application:didFinishLaunchingWithOptions` 같은 동일한 메서드로 모든 제품 핸들러를 등록하는 것이 좋습니다.

```objc
- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {

        ...

        [PFPurchase addObserverForProduct:@"Pro" block:^(SKPaymentTransaction *transaction) {
        isPro = YES;
    }];
    [PFPurchase addObserverForProduct:@"VIP" block:^(SKPaymentTransaction *transaction) {
        isVip = YES;
    }];
}
```

구매를 시작하려면 `+[PFPurchase buyProduct:block:]` 메서드를 사용합니다.

```objc
[PFPurchase buyProduct:@"Pro" block:^(NSError *error) {
    if (!error) {
        // Run UI logic that informs user the product has been purchased, such as displaying an alert view.
    }
}];
```

`buyProduct:block:`을 호출하면 Apple 로그인 정보를 입력하라는 대화 상자가 표시됩니다. 사용자 ID가 확인되면 제품이 구입됩니다. 비소모성 제품을 이미 구입한 경우에는 다시 구매해도 비용이 청구되지 않습니다.

## 다운로드 가능한 구매 항목

책이나 영화 같은 IAP 제품 중에는 구매 후에 다운로드해야 하는 콘텐츠 파일이 연결된 것이 많습니다. Parse에서는 이런 작업을 간단하게 처리할 수 있습니다.

1.  먼저 웹 데이터 브라우저로 가서 `Product` 클래스를 만듭니다.
2.  각 제품에 대해 필수 메타데이터 정보를 입력하고 콘텐츠 파일을 업로드합니다.
        1.  `productIdentifier:` iTunes Connect에 있는 것과 일치하는 제품의 제품 식별자
        2.  `icon:` `PFProductTableViewController`에 표시할 아이콘
        3.  `title:` `PFProductTableViewController`에 표시할 제목
        4.  `subtitle:` `PFProductTableViewController`에 표시할 소제목
        5.  `order`: `PFProductTableViewController`에 이 제품을 표시할 순서. `PFProductTableViewController`에서만 사용됩니다. 순서가 중요하지 않은 경우에는 0을 입력하세요.
        6.  `download`: 다운로드 가능한 콘텐츠 파일 `download`에 업로드한 파일은 공개적으로 액세스할 수 없으며 구매할 때만 다운로드가 가능합니다. `downloadName`은 다운로드한 후 디스크에 표시되는 파일 이름입니다. 이 이름은 입력할 필요가 없습니다.
3.  다음으로는 제품 핸들러를 등록해야 합니다.

```objc
[PFPurchase addObserverForProduct:@"Pro" block:^(SKPaymentTransaction *transaction) {
    [PFPurchase downloadAssetForTransaction:transaction completion:^(NSString *filePath, NSError *error) {
        if (!error) {
            // at this point, the content file is available at filePath.
        }
    }];
}];
```

이것으로 구매가 이루어지지 않지만 나중에 구매하는 경우 실행할 블록을 등록하면 됩니다. `downloadAssetForTransaction:completion:`을 호출하면 구매 영수증이 Parse Cloud로 전달되고, Apple에서 구매 내용을 확인합니다. 영수증이 확인되고 나면 구입한 파일이 다운로드됩니다.

구입하려면

```objc
[PFPurchase buyProduct:@"Pro" block:^(NSError *error) {
    if (!error) {
        // run UI logic that informs user the product has been purchased, such as displaying an alert view.
    }
}];
```

`buyProduct:block:`을 호출하면 Apple 로그인 정보를 입력하라는 대화 상자가 표시됩니다. 사용자 ID가 확인되면 제품이 구입됩니다.

## 제품 정보 쿼리

`PFProduct`를 사용하여 데이터 브라우저에서 생성된 제품 개체를 쿼리할 수 있습니다. `%{ParseUser}`나 `PFRole`과 마찬가지로 `PFProduct`도 다양한 제품별 속성에 대한 편리한 접근자가 포함된 `%{ParseObject}`의 하위 클래스입니다.

예를 들어 다음은 제품을 가져오는 간단한 쿼리입니다.

```objc
PFQuery *productQuery = [PFProduct query];
PFProduct *product = [[productQuery findObjects] anyObject];
NSLog(@"%@, %@", product.productIdentifier, product.title);
```

## PFProductTableViewController

![](/images/docs/products_table_screenshot.png)

`PFProductTableViewController`는 테이블 보기에 모든 IAP 제품을 표시하는 `PFQueryTableViewController`의 하위 클래스입니다. 만화책이나 비디오 튜토리얼을 판매하는 앱 등 일부 콘텐츠 앱에서 `PFProductTableViewController`를 사용하면 간단하게 제품을 판매할 수 있습니다. 기본적으로 각 셀은 제품이며 셀을 누르면 해당 제품의 구매가 시작됩니다. 제품에 다운로드 가능한 콘텐츠가 연결되어 있는 경우에는 셀을 선택하면 다운로드가 시작되며 다운로드 진행 상태를 알리는 진행률 표시줄이 나타납니다.

이 클래스를 사용하려면 데이터 브라우저를 통해 모든 제품 정보를 `Product` 클래스에 입력해야 합니다.
