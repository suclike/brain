# 分析

Parse 提供了很多回调接口，让您可以了解应用的核心。我们知道，了解您的应用程序执行的操作、频率和时间非常重要。

虽然本节将介绍不同的方法来测试您的应用程序，以最好地利用 Parse 的分析后台，不过使用 Parse 存储和检索数据的开发者已经可以利用 Parse 上的分析指标。

无需实施任何客户端逻辑，您就可以在应用面板中查看 API 请求的实时图表和数据细项（按设备类型、Parse 类名或 REST 动词分类），并保存这些图表过滤器以快速访问您感兴趣的数据。

## 应用开启/推送分析

我们的初始分析回调方法让您可以在应用启动后对其进行跟踪。通过在向 `application:didFinishLaunching:` 中添加下面的行，您即可开始收集关于您的应用何时开启及其开启频率的数据。

```objc 
[PFAnalytics trackAppOpenedWithLaunchOptions:launchOptions];
```

您可以通过应用的面板访问统计数据图表和数据细项。

您还可以获得关于推送通知递送和打开率的进一步分析。请务必参阅&ldquo;推送指南&rdquo;的[&ldquo;跟踪推送和应用开启次数&rdquo;小节](#receiving-tracking)，了解关于处理通知净负载和与推送相关的回调的更多信息。

## 自定义分析

`PFAnalytics` 还可以让您用一些 `NSString` 键值对监控应用事件。这些额外维度允许您通过应用面板细分自定义事件。

比如说，您的应用提供有公寓清单搜索功能，您想要用一些额外的元数据追踪该功能的使用频率。

```objc
NSDictionary *dimensions = @{
    // Define ranges to bucket data points into meaningful segments
    @"priceRange": @"1000-1500",
    // Did the user filter the query?
    @"source": @"craigslist",
    // Do searches happen more often on weekdays or weekends?
    @"dayType": @"weekday"
};
// Send the dimensions to Parse along with the 'search' event
[PFAnalytics trackEvent:@"search" dimensions:dimensions];
```

`PFAnalytics` 甚至可以作为一个轻便的错误跟踪程序使用 － 只需调用以下内容，你将可以在您的应用程序中查看经过错误代码细分的出错率和出错频率：

```objc
NSString *codeString = [NSString stringWithFormat:@"%d", [error code]];
[PFAnalytics trackEvent:@"error" dimensions:@{ @"code": codeString }];
```

注意，对于每次调用 `trackEvent:dimensions:`，Parse 目前只能储存前八个键值对。
