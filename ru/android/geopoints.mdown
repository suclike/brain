# Геоточки

Parse позволяет связывать реальные географические координаты с объектом.  Добавление `ParseGeoPoint` к объекту `ParseObject` позволяет запросам учитывать местоположение объекта по отношению к ориентиру.  Эта функция позволяет легко определять, какой пользователь ближе всего находится к другому пользователю, или какие места находятся ближе всего к пользователю.

## ParseGeoPoint

Чтобы связать точку с объектом, сначала нужно создать `ParseGeoPoint`.  Например, чтобы создать точку с широтой 40.0 градусов и долготой -30.0 градусов, необходимо выполнить следующее:

```java
ParseGeoPoint point = new ParseGeoPoint(40.0, -30.0);
```

Затем эта точка хранится в объекте как регулярное поле.

```java
placeObject.put("location", point);
```

## Запросы географических координат

Теперь, когда существует несколько объектов с пространственными координатами, можно узнать, какие объекты находятся ближе всего к точке.  Это можно выполнить при помощи добавления дополнительного ограничения к запросу `ParseQuery` при помощи метода `whereNear`.  Получение списка из десяти мест, которые находятся ближе всего к пользователю, может выглядеть приблизительно следующим образом:

```java
ParseGeoPoint userLocation = (ParseGeoPoint) userObject.get("location");
ParseQuery<ParseObject> query = ParseQuery.getQuery("PlaceObject");
query.whereNear("location", userLocation);
query.setLimit(10);
query.findInBackground(new FindCallback<ParseObject>() { ... });
```

В этой точке значение `nearPlaces` будет представлять собой массив объектов, упорядоченных по расстоянию (от самого ближнего до самого дальнего) от точки `userLocation`. Обратите внимание, что если применяется дополнительное ограничение `orderByAscending()`/`orderByDescending()`, оно будет иметь более высокий приоритет, чем упорядочивание по расстоянию.

Чтобы ограничить результаты при помощи расстояния, проверьте поля `whereWithinKilometers`, `whereWithinMiles` и `whereWithinRadians`.

Также можно выполнить запрос объектов, которые находятся в определенном месте.  Чтобы найти объекты в прямоугольной области, добавьте ограничение `whereWithinGeoBox` к запросу `ParseQuery`.

```java
ParseGeoPoint southwestOfSF = new ParseGeoPoint(37.708813, -122.526398);
ParseGeoPoint northeastOfSF = new ParseGeoPoint(37.822802, -122.373962);
ParseQuery<ParseObject> query = ParseQuery.getQuery("PizzaPlaceObject");
query.whereWithinGeoBox("location", southwestOfSF, northeastOfSF);
query.findInBackground(new FindCallback<ParseObject>() { ... });
```

## Предупреждения

На данный момент существует несколько пунктов, за которыми необходимо следить:

1.  Каждый класс ParseObject может иметь только один ключ по отношению к объекту ParseGeoPoint.
2.  Точки не должны равняться границам диапазонов или превышать их.  Широта не должна равняться значениям -90.0 или 90.0.  Долгота не должна равняться значениям -180.0 или 180.0.  Попытка установить широту или долготу, которые превышают границы, приведет к ошибке.
