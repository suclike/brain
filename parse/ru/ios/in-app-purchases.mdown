# Покупки в приложении

Parse предоставляет набор API для работы с покупками в приложении. Parse облегчает работу с `StoreKit` и обеспечивает доставку загружаемых материалов с подтверждением квитанции в облаке. Подтверждение квитанции &mdash; это механизм, который позволяет ограничить загрузки только пользователям, выполнившим оплату.

Кроме того, разработчики могут прикреплять метаданные по продуктам, с которыми можно выполнять запрос, для категоризации, поиска и динамического управления продуктами, доступными для покупки.

Наконец, все материалы, загруженные на Parse, не подлежат процедуре предварительного рассмотрения Apple и поэтому могут быть приобретены сразу же после завершения загрузки.

### Настройка Apple

Перед использованием функции покупок в приложениях на Parse необходимо настроить приложение и продукты в Apple. Этот процесс накладывается на портал инициализации и iTunes Connect. Рекомендуем придерживаться следующего [пошагового руководства](https://developer.apple.com/library/ios/#technotes/tn2259/_index.html).

Обратите внимание, что выполняя этот сложный процесс настройки необходимо точно придерживаться указаний в документации Apple.

## Простые покупки

После завершения настройки можно начинать работу с покупками в приложении:

В основном потоке зарегистрируйте обработчики для продуктов:

```objc
// Use the product identifier from iTunes to register a handler.
[PFPurchase addObserverForProduct:@"Pro" block:^(SKPaymentTransaction *transaction) {
    // Write business logic that should run once this product is purchased.
    isPro = YES;
}];
```

Обратите внимание, что это действие не выполняет покупку, а просто регистрирует блок, который должен выполняться, если покупка производится позже. Эту регистрацию необходимо выполнить в основном потоке, желательно сразу же при запуске приложения, то есть в методе `application:didFinishLaunchingWithOptions:`. Если имеется несколько продуктов, рекомендуется зарегистрировать все обработчики продуктов в одном методе, например `application:didFinishLaunchingWithOptions`.

```objc
- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {

        ...

        [PFPurchase addObserverForProduct:@"Pro" block:^(SKPaymentTransaction *transaction) {
        isPro = YES;
    }];
    [PFPurchase addObserverForProduct:@"VIP" block:^(SKPaymentTransaction *transaction) {
        isVip = YES;
    }];
}
```

Чтобы выполнить покупку, используйте метод `+[PFPurchase buyProduct:block:]`:

```objc
[PFPurchase buyProduct:@"Pro" block:^(NSError *error) {
    if (!error) {
        // Run UI logic that informs user the product has been purchased, such as displaying an alert view.
    }
}];
```

Вызов метода `buyProduct:block:` открывает диалоговое окно, которое запросит пользователей ввести свои учетные данные Apple. Когда личность пользователя подтверждена, продукт будет приобретен. Если продукт не готов к приобретению и был приобретен пользователем ранее, с пользователя не будет снята оплата.

## Загружаемые покупки

Многие продукты IAP, например книги и фильмы, имеют связанные файлы с материалами, которые следует загружать только после выполнения покупки. Это легко выполнить при помощи Parse:

1.  Сначала перейдите в веб-браузер данных и создайте класс `Product`.
2.  Для каждого продукта заполните необходимые метаданные и загрузите файлы материалов:
        1.  `productIdentifier:` идентификатор продукта, совпадающий с идентификатором в iTunes Connect
        2.  `icon:` значок, который будет отображаться в `PFProductTableViewController`
        3.  `title:` заголовок, который будет отображаться в `PFProductTableViewController`
        4.  `subtitle:` подзаголовок, который будет отображаться в `PFProductTableViewController`
        5.  `order`: порядок, в котором продукт должен появиться в `PFProductTableViewController`. Это поле используется только в контроллере `PFProductTableViewController`; введите 0, если порядок не важен
        6.  `download`: файл загружаемых материалов Обратите внимание, что файл, загружаемый в `download`, не является общедоступным и становится доступным для загрузки только после выполнения покупки. `downloadName` &mdash; это имя файла на диске после загрузки. Это поле заполнять не нужно.
3.  Затем необходимо зарегистрировать обработчик продукта:

```objc
[PFPurchase addObserverForProduct:@"Pro" block:^(SKPaymentTransaction *transaction) {
    [PFPurchase downloadAssetForTransaction:transaction completion:^(NSString *filePath, NSError *error) {
        if (!error) {
            // at this point, the content file is available at filePath.
        }
    }];
}];
```

Обратите внимание, что это действие не выполняет покупку, а просто регистрирует блок, который должен выполняться, если покупка производится позже. Вызов метода `downloadAssetForTransaction:completion:` передает квитанцию покупки в Parse Cloud, которое затем запрашивает подтверждение у Apple, что покупка была выполнена. После подтверждения квитанции приобретенный файл загружается.

Выполнение покупки:

```objc
[PFPurchase buyProduct:@"Pro" block:^(NSError *error) {
    if (!error) {
        // run UI logic that informs user the product has been purchased, such as displaying an alert view.
    }
}];
```

Вызов метода `buyProduct:block:` открывает диалоговое окно, которое запросит пользователей ввести свои учетные данные Apple. Когда личность пользователя подтверждена, продукт будет приобретен.

## Запрос информации о продукте

Можно выполнять запрос объектов продукта, созданных в браузере данных при помощи `PFProduct`. Подобно `%{ParseUser}` или `PFRole`, `PFProduct` является подклассом объекта `%{ParseObject}`, который содержит удобные аксессоры к различным свойствам, специфическим для конкретного продукта.

Например, ниже представлен простой запрос на получение продукта:

```objc
PFQuery *productQuery = [PFProduct query];
PFProduct *product = [[productQuery findObjects] anyObject];
NSLog(@"%@, %@", product.productIdentifier, product.title);
```

## PFProductTableViewController

![](/images/docs/products_table_screenshot.png)

`PFProductTableViewController` является подклассом контроллера `PFQueryTableViewController`, который отображает все продукты IAP в виде таблицы. Для некоторых приложений с материалами, например приложений, продающих комиксы или видеоуроки, может быть удобно использовать `PFProductTableViewController` для продажи продуктов. По умолчанию каждая ячейка представляет продукт, касание ячейки инициирует покупку продукта. Если у продукта есть связанные загружаемые материалы, загрузка начнется после выбора ячейки, и будет отображаться индикатор выполнения для демонстрации выполнения загрузки.

Обратите внимание, что для использования этого класса необходимо ввести всю информацию продукта в класс `Product` через браузер данных.
