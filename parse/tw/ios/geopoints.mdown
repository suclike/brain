# GeoPoint

Parse 能讓您將現實世界的經緯度座標與物件建立關聯。將 `PFGeoPoint` 加入 `%{ParseObject}`，能在進行查詢時，將某個物件與參考點之間的鄰近性列入考慮。這讓您很容易完成一些操作，比如找出哪些使用者距離其他使用者最近，或是哪些地點離使用者最近。

<div class='tip info'><div>
請在我們的 [Anywall 教學](/tutorials/anywall)中探索 `PFGeoPoints` 和 `%{ParseUser}` 在真實應用程式中的用法。您將學到包括實作基本使用者管理的工作流程，乃至於用核心位置追蹤 GPS 位置在內的所有作法。
</div></div>

## PFGeoPoint

若要建立某地點與物件的關聯，您必須先建立 `PFGeoPoint`。例如，若要建立經度 -30.0 度緯度 40.0 度的地點：

```objc
PFGeoPoint *point = [PFGeoPoint geoPointWithLatitude:40.0 longitude:-30.0];
```

接著此地點會被當成一般欄位儲存在物件中。

```objc placeObject[@"location"] = point;```

注意：目前在一個類別中只能有一個索引鍵是 `PFGeoPoint`。

### 取得使用者的目前位置

`PFGeoPoint` 也提供用來擷取使用者目前位置的協助程式方法。也可以透過 `geoPointForCurrentLocationInBackground` 完成：

```objc
[PFGeoPoint geoPointForCurrentLocationInBackground:^(PFGeoPoint *geoPoint, NSError *error) {
    if (!error) {
        // do something with the new geoPoint
    }
}];
```

執行這段程式碼時，會發生以下情況：

1.  內部 `CLLocationManager` 會開始偵聽位置更新（透過 `startsUpdatingLocation`）。
2.  一接收到位置，位置管理員就會停止偵聽位置更新（透過 `stopsUpdatingLocation`），然後會建立新位置的 `PFGeoPoint`。如果發生位置管理員錯誤，仍會停止偵聽更新，並會傳回 `NSError`。
3.  您的 `block` 會與 `PFGeoPoint` 一起呼叫。

我們也為選擇直接使用 `CLLocationManager` 的人，提供了建構函式 `+geoPointWithLocation:` 來將 `CLLocation` 直接轉換為 `PFGeoPoint`（對需要常數輪詢的應用程式很好用）。

## Geo 查詢

既然您有一堆具有空間座標的物件，若能找出哪個物件離某個地點最近會很棒。這點可以透過使用 `whereKey:nearGeoPoint:` 將另一個限制加入 `PFQuery` 來達成。若要取得距離使用者最近十個位置的清單，看起來會像是：

```objc
// User's location
PFGeoPoint *userGeoPoint = userObject[@"location"];
// Create a query for places
PFQuery *query = [PFQuery queryWithClassName:@"PlaceObject"];
// Interested in locations near user.
[query whereKey:@"location" nearGeoPoint:userGeoPoint];
// Limit what could be a lot of points.
query.limit = 10;
// Final list of objects
placesObjects = [query findObjects];
```

此時的 `placesObjects` 會是物件陣列，且會依照跟 `userGeoPoint` 之間的距離排序（由近至遠）。請注意，如果有套用額外的 `orderByAscending:`/`orderByDescending:` 限制，此限制將優先於距離排序。

若要使用距離限制結果，請檢查 `whereKey:nearGeoPoint:withinMiles`、`whereKey:nearGeoPoint:withinKilometers` 和 `whereKey:nearGeoPoint:withinRadians`。

也可以查詢包含在特定區域內的物件組合。若要找出矩形邊框內的物件，請將 `whereKey:withinGeoBoxFromSouthwest:toNortheast:` 限制加入 `PFQuery`。

```objc
PFGeoPoint *swOfSF = [PFGeoPoint geoPointWithLatitude:37.708813 longitude:-122.526398];
PFGeoPoint *neOfSF = [PFGeoPoint geoPointWithLatitude:37.822802 longitude:-122.373962];
PFQuery *query = [PFQuery queryWithClassName:@"PizzaPlaceObject"];
[query whereKey:@"location" withinGeoBoxFromSouthwest:swOfSF toNortheast:neOfSF];
NSArray *pizzaPlacesInSF = [query findObjects];
```

## 注意事項

此時有一些要注意的事項：

1.  每個 PFObject 類別的 PFGeoPoint 物件只會有一個索引鍵。
2.  地點不應等同或超過範圍的極值。緯度不應為 -90.0 或 90.0。經度不應為 -180.0 或 180.0。若嘗試將經緯度設在界外將造成錯誤。
