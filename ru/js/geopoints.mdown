# Геоточки

Parse позволяет связывать реальные географически координаты с объектом.  Добавление `Parse.GeoPoint` к объекту `Parse.Object` позволяет запросам учитывать соседство объекта с ориентиром.  Эта функция позволяет легко определять, какой пользователь ближе всего находится к другому пользователю, или какие места находятся ближе всего к пользователю.

## Parse.GeoPoint

Чтобы связать точку с объектом, сначала нужно создать `Parse.GeoPoint`.  Например, чтобы создать точку с широтой 40.0 градусов и долготой -30.0 градусов, необходимо выполнить следующее:

```js
var point = new Parse.GeoPoint({latitude: 40.0, longitude: -30.0});
```

Затем эта точка хранится в объекте как регулярное поле.

```js
placeObject.set("location", point);
```

Примечание. На данный момент только один ключ для класса может быть объектом `Parse.GeoPoint`.

## Запросы географических координат

Теперь, когда существует несколько объектов с пространственными координатами, можно узнать, какие объекты находятся ближе всего к точке.  Это можно выполнить при помощи добавления дополнительного ограничения к запросу `Parse.Query` при помощи метода `near`.  Получение списка из десяти мест, которые находятся ближе всего к пользователю, может выглядеть приблизительно следующим образом:

```js
// User's location
var userGeoPoint = userObject.get("location");
// Create a query for places
var query = new Parse.Query(PlaceObject);
// Interested in locations near user.
query.near("location", userGeoPoint);
// Limit what could be a lot of points.
query.limit(10);
// Final list of objects
query.find({
  success: function(placesObjects) {   }
});
```

В этой точке значение `placesObjects` будет представлять собой массив объектов, упорядоченных по расстоянию (от самого ближнего до самого дальнего) от точки `userGeoPoint`. Обратите внимание, что если применяется дополнительное ограничение `ascending()`/`descending()`, оно будет иметь более высокий приоритет, чем упорядочивание по расстоянию.

Чтобы ограничить результаты при помощи расстояния, проверьте поля `withinMiles`, `withinKilometers` и `withinRadians`.

Также можно выполнить запрос объектов, которые находятся в определенном месте.  Чтобы найти объекты в прямоугольной области, добавьте ограничение `withinGeoBox` к запросу `Parse.Query`.

```js
var southwestOfSF = new Parse.GeoPoint(37.708813, -122.526398);
var northeastOfSF = new Parse.GeoPoint(37.822802, -122.373962);

var query = new Parse.Query(PizzaPlaceObject);
query.withinGeoBox("location", southwestOfSF, northeastOfSF);
query.find({
  success: function(pizzaPlacesInSF) {
    ...
  }
});
```

## Предупреждения

На данный момент существует несколько моментов, за которыми необходимо следить:

1.  Каждый класс Parse.Object может иметь только один ключ по отношению к объекту Parse.GeoPoint.
2.  Точки не должны равняться границам диапазонов или превышать их.  Широта не должна равняться значениям -90.0 или 90.0.  Долгота не должна равняться значениям -180.0 или 180.0.  Попытка установить широту или долготу, которые превышают границы, приведет к ошибке.
